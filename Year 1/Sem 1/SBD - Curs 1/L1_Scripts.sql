/* Script 6 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, JOBS.JOB_TITLE
from EMPLOYEES
join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
WHERE manager_id IS NULL;

/* Script 7 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY, EMPLOYEES.COMMISSION_PCT
from EMPLOYEES
where COMMISSION_PCT IS NOT NULL
ORDER BY salary DESC, commission_pct DESC;

/* Script 8 -> Daca commision_pct este null se va ordona tupla/inregistrarea doar pe baza salariului */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY, EMPLOYEES.COMMISSION_PCT
from EMPLOYEES
ORDER BY salary DESC, commission_pct DESC;

/* Script 9 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME
from EMPLOYEES
where UPPER(EMPLOYEES.LAST_NAME) like '__A%' or UPPER(EMPLOYEES.FIRST_NAME) like '__A%';

/* Script 10 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME
from EMPLOYEES
where (UPPER(EMPLOYEES.LAST_NAME) like '%L%L%' or UPPER(EMPLOYEES.FIRST_NAME) like '%L%L%')
and (EMPLOYEES.DEPARTMENT_ID = 30 or EMPLOYEES.MANAGER_ID = 102);

/* Script 11 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, JOBS.JOB_TITLE, EMPLOYEES.SALARY
from EMPLOYEES
join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
where UPPER(JOBS.JOB_TITLE) like '%CLERK%' or UPPER(JOBS.JOB_TITLE) like '%REP%' and EMPLOYEES.SALARY NOT IN (1000, 2000, 3000);

/* Script 12 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, DEPARTMENTS.DEPARTMENT_NAME
from EMPLOYEES
LEFT join DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

/* Script 13 */
select DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME
from DEPARTMENTS
RIGHT join EMPLOYEES on DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID;

/* Script 14 */
select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.MANAGER_ID, E2.FIRST_NAME AS MANAGER_FIRST_NAME, E2.LAST_NAME AS MANAGER_LAST_NAME
from EMPLOYEES
join EMPLOYEES E2 on EMPLOYEES.MANAGER_ID = E2.EMPLOYEE_ID;

/* Script 15 */
select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.MANAGER_ID, E2.FIRST_NAME AS MANAGER_FIRST_NAME, E2.LAST_NAME AS MANAGER_LAST_NAME
from EMPLOYEES
LEFT join EMPLOYEES E2 on EMPLOYEES.MANAGER_ID = E2.EMPLOYEE_ID;

/* Script 16 */
select DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
from DEPARTMENTS
FULL OUTER JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
where EMPLOYEES.DEPARTMENT_ID IS NULL and DEPARTMENTS.DEPARTMENT_ID IS NOT null
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME;

/* Script 17 */
select MAX(SALARY) AS Maxim, MIN(SALARY) AS Minim, ROUND(SUM(SALARY), 2) AS Suma, ROUND(AVG(SALARY), 2) AS Media
from EMPLOYEES;

/* Script 18 */
select JOBS.JOB_TITLE, MAX(SALARY) AS Maxim, MIN(SALARY) AS Minim, ROUND(SUM(SALARY), 2) AS Suma, ROUND(AVG(SALARY), 2) AS Media
from EMPLOYEES
join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
GROUP BY JOBS.JOB_TITLE;

/* Script 19 */
select DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, COUNT(EMPLOYEES.EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES
from DEPARTMENTS
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME;

/* Script 20 */
select DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY, COUNT(EMPLOYEES.EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES, ROUND(AVG(EMPLOYEES.SALARY), 2) AS AVG_SALARY
from DEPARTMENTS
join LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY;

/* Script 21 */
select DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, ROUND(SUM(SALARY), 2) AS Suma_Salariilor
from DEPARTMENTS
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME;

/* Script 22 */
select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
from EMPLOYEES
where EMPLOYEES.SALARY > (select AVG(SALARY) from EMPLOYEES)
ORDER BY salary DESC;

/* Script 23 */
select JOBS.JOB_TITLE, ROUND(AVG(SALARY), 2) AS AVG_SALARY
from EMPLOYEES
join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
GROUP BY JOBS.JOB_TITLE
HAVING AVG(SALARY) = (select MIN(AVG(SALARY)) from (select AVG(SALARY) AS AVG_SALARY from EMPLOYEES join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID GROUP BY JOBS.JOB_TITLE));

/* Script 24 */
select JOBS.JOB_ID, JOBS.JOB_TITLE, ROUND(AVG(SALARY), 2) AS AVG_SALARY
from EMPLOYEES
join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
GROUP BY JOBS.JOB_ID, JOBS.JOB_TITLE
HAVING AVG(SALARY) = (select MIN(AVG(SALARY)) from (select AVG(SALARY) AS AVG_SALARY from EMPLOYEES join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID GROUP BY JOBS.JOB_TITLE));

/* Script 25 */
select DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, COUNT(EMPLOYEES.EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES
from DEPARTMENTS
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEES.EMPLOYEE_ID) < 4 AND COUNT(EMPLOYEES.EMPLOYEE_ID) > 0
UNION
select DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME, COUNT(EMPLOYEES.EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES
from DEPARTMENTS
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEES.EMPLOYEE_ID) = (select MAX(COUNT(EMPLOYEES.EMPLOYEE_ID)) from DEPARTMENTS LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID GROUP BY DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME);

/* Script 26 */
select COUNT(DEPARTMENTS.DEPARTMENT_ID) AS NUMBER_OF_DEPARTMENTS
from DEPARTMENTS
LEFT JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_ID
HAVING COUNT(EMPLOYEES.EMPLOYEE_ID) >= 15;

/* Script 27 */
select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.HIRE_DATE
from EMPLOYEES
where TO_CHAR(EMPLOYEES.HIRE_DATE, 'DD') = (select TO_CHAR(HIRE_DATE, 'DD') from EMPLOYEES group by TO_CHAR(HIRE_DATE, 'DD') having count(EMPLOYEE_ID) = (select MAX(COUNT(EMPLOYEE_ID)) from EMPLOYEES group by TO_CHAR(HIRE_DATE, 'DD')));

/* Script 28 METODA 1 */
select DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
from EMPLOYEES
join DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
where (DEPARTMENTS.DEPARTMENT_ID, EMPLOYEES.SALARY) in (select DEPARTMENT_ID, MIN(SALARY) from EMPLOYEES group by DEPARTMENT_ID);

/* Script 28 METODA 2 */
select DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
from EMPLOYEES
join DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
where (DEPARTMENTS.DEPARTMENT_ID, EMPLOYEES.SALARY) in (select DEPARTMENT_ID, SALARY from (select DEPARTMENT_ID, SALARY, RANK() OVER (PARTITION BY DEPARTMENT_ID ORDER BY SALARY) AS RANKING from EMPLOYEES) where RANKING = 1);

/* Script 29 */
select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
from (select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY, RANK() OVER (ORDER BY EMPLOYEES.SALARY DESC) AS RANKING from EMPLOYEES)
where RANKING <= 10;

/* Script 30 */
select EMPLOYEES.EMPLOYEE_ID, EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY
from EMPLOYEES
where EMPLOYEES.SALARY > (select AVG(SALARY) from EMPLOYEES where EMPLOYEES.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID)
ORDER BY salary DESC;

/* Script 31 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, COUNT(EMPLOYEES.EMPLOYEE_ID) AS NUMBER_OF_PROMOTIONS
from EMPLOYEES
join JOB_HISTORY ON EMPLOYEES.EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID
GROUP BY EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME;

/* Script 32 */
select EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, COUNT(DISTINCT SALARY) AS NUMBER_OF_DIFFERENT_SALARIES
from EMPLOYEES
GROUP BY EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME;

/* Script 33 */
select DEPARTMENTS.DEPARTMENT_NAME, JOBS.JOB_TITLE, MAX(SALARY) AS MAX_SALARY
from EMPLOYEES
join DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
join JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
GROUP BY DEPARTMENTS.DEPARTMENT_NAME, JOBS.JOB_TITLE;

/* Script 34 */
select TO_CHAR(EMPLOYEES.HIRE_DATE, 'DD') AS DAY, COUNT(EMPLOYEES.EMPLOYEE_ID) AS NUMBER_OF_EMPLOYEES_HIRED
from EMPLOYEES
where TO_CHAR(EMPLOYEES.HIRE_DATE, 'DD') in ('01', '02')
GROUP BY TO_CHAR(EMPLOYEES.HIRE_DATE, 'DD');
